{"version":3,"sources":["pages/LandingPage/LandingPage.js","features/Image/Image.js","features/PageTitle/PageTitle.js","features/Icon/Icon.js","pages/ProjectsPage/ProjectsPage.js","pages/TechStackPage/constants.js","pages/TechStackPage/TechStackPage.js","constants.js","pages/ContactMePage/ContactMePage.js","pages/AboutMePage/AboutMePage.js","pages/SpaPage/SpaPage.js","layouts/footer.js","layouts/navigation.js","layouts/mainLayout.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","padding","spacing","textTransform","width","height","name","marginTop","letterSpacing","wordSpacing","fontWeight","subTitle","image","margin","boxShadow","opacity","cursor","&:hover","transform","transition","transitions","create","duration","enteringScreen","caption","Image","_ref","imgPath","classes","Object","core_browser_esm","Grid","container","direction","alignItems","justify","item","className","src","alt","Typography","concat","variant","align","title","PageTitle","text","icon","withBg","background","Icon","_ref$useBg","useBg","classToUse","images","IMG_DIR_PATH","frontEndIcons","backEndIcons","dbIcons","EMAIL","GITHUB_PORTFOLIO","GITHUB_PAGE","LINKEDIN","paragraph","lineHeight","DividerSpaced","Divider","WrappedlazyComponent","Component","component","lib_default","a","throttle","once","CSSTransition","appear","classNames","unmountOnExit","timeout","in","pageOrder","style","minHeight","map","imgObj","key","allIcons","i","Button","color","onClick","window","open","SpaPage","position","marginLeft","marginBottom","shortest","Footer","openNewTab","url","LinkedIn_default","GitHub_default","Navigation","children","MainLayout","createMuiTheme","palette","type","primary","main","responsiveFontSizes","App","ThemeProvider","CssBaseline","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f0926466.chunk.js","sourcesContent":["import React from \"react\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport { Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n    textTransform: \"uppercase\",\n    width: \"100%\",\n    height: \"100%\",\n  },\n  name: {\n    marginTop: \"-1em\",\n    letterSpacing: \"0.5em\",\n    wordSpacing: \"0.4em\",\n    fontWeight: \"400\"\n  },\n  subTitle: {\n    letterSpacing: \"0.4em\"\n  }\n}));\n\nexport default function LandingPage() {\n  const classes = useStyles();\n  return (\n    <div>\n      <Grid\n        container\n        spacing={0}\n        direction=\"column\"\n        alignItems=\"center\"\n        justify=\"center\"\n        style={{ minHeight: \"100vh\" }}\n      >\n        <Grid item>\n          <Typography\n            className={`${classes.name} ${classes.root}`}\n            variant=\"h2\"\n            align=\"center\"\n          >\n            Ralph Perez\n          </Typography>\n        </Grid>\n        <Grid item>\n          <Typography\n            className={`${classes.subTitle} ${classes.root}`}\n            variant=\"h5\"\n            align=\"center\"\n          >\n            Full-Stack Developer\n          </Typography>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  image: {\r\n    height: 110,\r\n    margin: theme.spacing(1),\r\n    boxShadow: \"0em 0em 0.5em black\",\r\n    opacity: \"0.6\",\r\n    padding: 0,\r\n    cursor: \"pointer\",\r\n    \"&:hover\": {\r\n      opacity: \"1\",\r\n      transform: \"translateY(-0.2em)\",\r\n      transition: theme.transitions.create([\"transform\", \"opacity\"], {\r\n        duration: theme.transitions.duration.enteringScreen\r\n      })\r\n    }\r\n  },\r\n  caption: {\r\n    letterSpacing: \"0.1em\",\r\n    fontWeight: \"400\"\r\n  }\r\n}));\r\n\r\nexport default function Image({ imgPath, caption }) {\r\n  const classes = useStyles();\r\n  return (\r\n    <Grid\r\n      container\r\n      spacing={0}\r\n      direction=\"column\"\r\n      alignItems=\"center\"\r\n      justify=\"center\"\r\n    >\r\n      <Grid item>\r\n        <img className={classes.image} src={imgPath} alt={imgPath} />\r\n\r\n        <Typography\r\n          className={`${classes.caption}`}\r\n          variant=\"subtitle2\"\r\n          align=\"center\"\r\n        >\r\n          {caption}\r\n        </Typography>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nImage.propTypes = {\r\n  imgPath: PropTypes.string.isRequired,\r\n  caption: PropTypes.string.isRequired\r\n};\r\n\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  title: {\r\n    margin: theme.spacing(2),\r\n    textTransform: \"uppercase\",\r\n    letterSpacing: \"0.2em\",\r\n    fontWeight: \"300\"\r\n  }\r\n}));\r\n\r\nexport default function PageTitle({ text, name }) {\r\n  // name is for scrolling\r\n  const classes = useStyles();\r\n  return (\r\n    <Typography variant=\"h5\" align=\"center\" className={classes.title} name={name}>\r\n      {text}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nPageTitle.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  name: PropTypes.string\r\n};\r\n\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  icon: {\r\n    height: 70,\r\n    margin: theme.spacing(1),\r\n    padding: theme.spacing(1)\r\n  },\r\n  withBg: {\r\n    background: \"#e7e7e7\"\r\n  }\r\n}));\r\n\r\nexport default function Icon({ imgPath, useBg = false }) {\r\n  const classes = useStyles();\r\n  const classToUse = useBg ? `${classes.icon} ${classes.withBg}` : classes.icon;\r\n  return <img className={classToUse} src={imgPath} alt={imgPath} />;\r\n}\r\n\r\nIcon.propTypes = {\r\n  imgPath: PropTypes.string.isRequired\r\n};\r\n\r\n// PostList.defaultProps = {\r\n//   posts: [],\r\n// };\r\n","import React from \"react\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport { Image, PageTitle } from \"../../features\";\n\nconst images = [\n  {\n    imgPath: \"/images/color_system_builder.jpg\",\n    caption: \"Color System Builder\"\n  },\n  { imgPath: \"/images/petangle.jpg\", caption: \"Petangle\" },\n  { imgPath: \"/images/sitemap_generator.jpg\", caption: \"Sitemap Generator\" }\n];\n\nexport default function ProjectsPage() {\n  return (\n    <div>\n      <PageTitle text=\"Projects\" name=\"projects\"/>\n      <Grid\n        container\n        spacing={5}\n        direction=\"row\"\n        alignItems=\"center\"\n        justify=\"center\"\n      >\n        {images.map(imgObj => (\n          <Grid item key={imgObj.imgPath}>\n            <Image imgPath={imgObj.imgPath} caption={imgObj.caption} />\n          </Grid>\n        ))}\n      </Grid>\n    </div>\n  );\n}\n","export const IMG_DIR_PATH = \"images/icons/\";","import React from \"react\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Icon, PageTitle } from \"../../features\";\nimport { IMG_DIR_PATH } from \"./constants\";\n\nconst useStyles = makeStyles(theme => ({\n  title: {\n    margin: theme.spacing(2),\n    textTransform: \"uppercase\",\n    letterSpacing: \"0.2em\",\n    fontWeight: \"300\"\n  }\n}));\n\nconst frontEndIcons = [\n  {\n    imgPath: `${IMG_DIR_PATH}HTML5_logo_and_wordmark.svg`,\n    useBg: true\n  },\n  {\n    imgPath: `${IMG_DIR_PATH}CSS3_logo_and_wordmark.svg`,\n    useBg: true\n  },\n  {\n    imgPath: `${IMG_DIR_PATH}Unofficial_JavaScript_logo_2.svg`,\n    useBg: false\n  },\n  {\n    imgPath: `${IMG_DIR_PATH}ts.png`,\n    useBg: false\n  },\n  {\n    imgPath: `${IMG_DIR_PATH}React-icon.svg`,\n    useBg: false\n  }\n];\n\nconst backEndIcons = [\n  {\n    imgPath: `${IMG_DIR_PATH}Python-logo-notext.svg`,\n    useBg: false\n  },\n  {\n    imgPath: `${IMG_DIR_PATH}pandas_secondary.svg`,\n    useBg: true\n  },\n  {\n    imgPath: `${IMG_DIR_PATH}NumPy_logo.svg`,\n    useBg: false\n  },\n\n  {\n    imgPath: `${IMG_DIR_PATH}flask-seeklogo.com.svg`,\n    useBg: true\n  },\n  {\n    imgPath: `${IMG_DIR_PATH}django-logo-negative.svg`,\n    useBg: false\n  }\n];\nconst dbIcons = [\n  {\n    imgPath: `${IMG_DIR_PATH}Antu_mysql-workbench.svg`,\n    useBg: false\n  },\n  {\n    imgPath: `${IMG_DIR_PATH}Postgresql_elephant.svg`,\n    useBg: false\n  },\n  {\n    imgPath: `${IMG_DIR_PATH}Firebase_Logo.svg`,\n    useBg: true\n  },\n  {\n    imgPath: `${IMG_DIR_PATH}MongoDB_Logo.svg`,\n    useBg: false\n  },\n];\n\nexport default function TechStackPage() {\n  const classes = useStyles();\n  const allIcons = [frontEndIcons, backEndIcons, dbIcons];\n  return (\n    <div>\n      <PageTitle text=\"Tech Stack\" />\n      {allIcons.map((images, i) => (\n        <Grid\n          key={i}\n          container\n          spacing={0}\n          direction=\"row\"\n          alignItems=\"center\"\n          justify=\"center\"\n        >\n          {images.map(imgObj => (\n            <Grid item key={imgObj.imgPath}>\n              <Icon imgPath={imgObj.imgPath} useBg={imgObj.useBg} />\n            </Grid>\n          ))}\n        </Grid>\n      ))}\n    </div>\n  );\n}\n","export const EMAIL = \"pralphv321@gmail.com\"\r\nexport const GITHUB_PORTFOLIO = \"https://github.com/pralphv/portfolio\"\r\nexport const GITHUB_PAGE = \"https://github.com/pralphv\"\r\nexport const GITHUB_COLOR_SYSTEM_BUILDER = \"https://github.com/pralphv/stripe_color_system_builder\"\r\nexport const GITHUB_PETANGLE = \"https://github.com/pralphv/petangle\"\r\nexport const GITHUB_SITEMAP_GENERATOR = \"https://github.com/pralphv/sitemap_generator\"\r\nexport const LINKEDIN = \"https://www.linkedin.com/in/ralph-vincent-o-perez-16b378122/\"\r\n","import React from \"react\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport { Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\n\nimport { PageTitle } from \"../../features\";\nimport { EMAIL } from \"../../constants\";\n\nconst useStyles = makeStyles(theme => ({\n  paragraph: {\n    padding: theme.spacing(1),\n    lineHeight: \"2em\",\n    fontWeight: \"300\"\n  }\n}));\n\nexport default function ContactMePage() {\n  const classes = useStyles();\n  return (\n    <div>\n      <PageTitle text=\"Contact Me\" name=\"contact\"/>\n      <Grid\n        container\n        spacing={0}\n        direction=\"column\"\n        alignItems=\"center\"\n        justify=\"center\"\n      >\n        <Grid item>\n          <Typography\n            className={classes.paragraph}\n            variant=\"subtitle2\"\n            align=\"center\"\n          >\n            Please feel free to reach out by E-mail or LinkedIn. I'll try my\n            best to reply as soon as possible!\n          </Typography>\n        </Grid>\n        <Grid item>\n          <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            onClick={() => window.open(`mailto:${EMAIL}`)}\n            style={{marginTop: \"1em\"}}\n\n          >\n            Email Me\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","import React from \"react\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport { Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\n\nimport { PageTitle } from \"../../features\";\n\nconst useStyles = makeStyles(theme => ({\n  paragraph: {\n    padding: theme.spacing(1),\n    lineHeight: \"2em\",\n    fontWeight: \"300\"\n  }\n}));\n\nexport default function AboutMePage() {\n  const classes = useStyles();\n  return (\n    <div>\n      <PageTitle text=\"About Me\" name=\"about\" />\n      <Grid\n        container\n        spacing={0}\n        direction=\"column\"\n        alignItems=\"center\"\n        justify=\"center\"\n      >\n        <Grid item>\n          <Typography\n            className={classes.paragraph}\n            variant=\"body2\"\n            align=\"center\"\n          >\n            Despite graduating with an Accounting & Finance Degree from The\n            University of Hong Kong, my passion in technology led me to pursue a\n            career in technology. Knowing the disadvantage that I have put\n            myself in by not having a Computer Science degree, I work hard to\n            close the gap between me and Computer Science graduates. I am now\n            fairly confident to say that I am a competent developer.\n          </Typography>\n        </Grid>\n        <Grid item>\n          <Typography\n            className={classes.paragraph}\n            variant=\"body2\"\n            align=\"center\"\n          >\n            Currently, I am working in an international investment bank where I\n            focus on automation. Cutting manual work and reducing operational\n            risks are ways I bring value.\n          </Typography>\n        </Grid>\n        <Grid item>\n          <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            onClick={() => window.open(\"cv.pdf\")}\n            style={{marginTop: \"1em\"}}\n          >\n            Resume\n          </Button>\n        </Grid>\n      </Grid>\n\n    </div>\n  );\n}\n","import React from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Divider from \"@material-ui/core/Divider\";\nimport LazyLoad from \"react-lazyload\";\nimport {\n  LandingPage,\n  ProjectsPage,\n  TechStackPage,\n  AboutMePage,\n  ContactMePage\n} from \"../../pages\";\nimport { CSSTransition } from \"react-transition-group\";\nimport \"./styles.css\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    margin: theme.spacing(2)\n  }\n}));\n\nfunction DividerSpaced() {\n  const classes = useStyles();\n  return <Divider className={classes.root} />;\n}\n\nfunction WrappedlazyComponent({ component: Component }) {\n  return (\n    <LazyLoad throttle={200} height={500} once>\n      <CSSTransition\n        appear\n        classNames=\"lazy\"\n        unmountOnExit\n        timeout={300}\n        in={true}\n      >\n        <Component />\n      </CSSTransition>\n    </LazyLoad>\n  );\n}\n\nconst pageOrder = [\n  LandingPage,\n  ProjectsPage,\n  TechStackPage,\n  AboutMePage,\n  ContactMePage\n];\n\nexport default function SpaPage() {\n  return (\n    <div>\n      {pageOrder.map((component, i) => (\n        <div key={i}>\n          <WrappedlazyComponent component={component} />\n          <DividerSpaced />\n        </div>\n      ))}\n    </div>\n  );\n}\n","import React from \"react\";\r\n\r\nimport { Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\r\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\r\n\r\nimport { GITHUB_PAGE, GITHUB_PORTFOLIO, LINKEDIN } from \"../constants\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    background: \"#191928\",\r\n    width: \"100%\",\r\n    position: \"absolute\",\r\n    marginTop: \"2em\",\r\n    marginLeft: \"-2em\",\r\n    marginBottom: \"-2em\",\r\n    minHeight: \"15vh\"\r\n  },\r\n  text: {\r\n    opacity: \"80%\",\r\n    padding: theme.spacing(1),\r\n    lineHeight: \"2em\",\r\n    fontWeight: \"300\",\r\n    color: \"#636da4\",\r\n    cursor: \"pointer\",\r\n    \"&:hover\": {\r\n      opacity: \"100%\",\r\n      transition: theme.transitions.create(\"opacity\", {\r\n        duration: theme.transitions.duration.shortest\r\n      })\r\n    }\r\n  },\r\n  icon: {\r\n    opacity: \"80%\",\r\n    color: \"#9b9ac5\",\r\n    cursor: \"pointer\",\r\n    \"&:hover\": {\r\n      opacity: \"100%\",\r\n      transition: theme.transitions.create(\"opacity\", {\r\n        duration: theme.transitions.duration.shortest\r\n      })\r\n    }\r\n  }\r\n}));\r\n\r\nexport default function Footer() {\r\n  const classes = useStyles();\r\n\r\n  function openNewTab(url) {\r\n    window.open(url, \"_blank\");\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container direction=\"column\" alignItems=\"center\">\r\n        <Grid item>\r\n          <Typography\r\n            className={classes.text}\r\n            variant=\"body2\"\r\n            align=\"center\"\r\n            color=\"primary\"\r\n            onClick={() => openNewTab(GITHUB_PORTFOLIO)}\r\n          >\r\n            Designed & developed by Ralph Vincent O., Perez\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <Grid spacing={2} container direction=\"row\" alignItems=\"center\">\r\n            <Grid item>\r\n              <LinkedInIcon\r\n                className={classes.icon}\r\n                onClick={() => openNewTab(LINKEDIN)}\r\n              />\r\n            </Grid>\r\n            <Grid item>\r\n              <GitHubIcon\r\n                className={classes.icon}\r\n                onClick={() => openNewTab(GITHUB_PAGE)}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Footer from \"./footer\";\r\n\r\nexport default function Navigation({ children }) {\r\n  return (\r\n    <div>\r\n      <Grid\r\n        container\r\n        spacing={0}\r\n        direction=\"column\"\r\n        alignItems=\"center\"\r\n        justify=\"center\"\r\n      >\r\n        {children}\r\n      </Grid>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nNavigation.propTypes = {\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node\r\n  ]).isRequired\r\n};\r\n","import React from \"react\";\nimport { SpaPage } from \"../pages\";\nimport Navigation from \"./navigation\";\n\nexport default function MainLayout() {\n  return (\n    <Navigation>\n      <SpaPage />\n    </Navigation>\n  );\n}\n","import React from \"react\";\nimport {\n  createMuiTheme,\n  ThemeProvider,\n  responsiveFontSizes\n} from \"@material-ui/core/styles\";\n\nimport \"./styles.css\";\nimport MainLayout from \"./layouts/mainLayout\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nlet theme = createMuiTheme({\n  palette: {\n    type: \"dark\",\n    background: \"#151515\",\n    primary: {\n      main: \"#797FD0\"\n    }\n  }\n});\n\ntheme = responsiveFontSizes(theme);\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <MainLayout />\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}